<launch>

  	<arg name="base_frame" default="base"/>
	<arg name="rviz" default="false" />
	<arg name="vehicleX" default="0"/>
	<arg name="vehicleY" default="0"/>
	<arg name="checkTerrainConn" default="true"/>
	<arg name="useLocalPlanner" default="true"/>
	<arg name="urdf_package" default="rpl-unitree-ros"/>
 	<arg name="urdf_path_and_name" default="xacro/go1.xacro"/>
	<arg name="sensorOffsetX" default="0"/>
	<arg name="sensorOffsetY" default="0"/>
  	<arg name="urdf_package_path" value="$(eval find(arg('urdf_package')) + '/' + arg('urdf_path_and_name'))" />

	<param name="robot_description" command="$(find xacro)/xacro --inorder
	'$(arg urdf_package_path)'
	name:=livox lidar_height:=0.245 lidar_ry:=0.26175" />
	
	<node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher">
		<param name="publish_frequency" type="double" value="200.0"/>
	</node>

	<node pkg="tf2_ros" type="static_transform_publisher" name="fastlioworld" args="0 0 0.5 0 0.131 0 0.991 map fastlio_world" />
	<node pkg="tf2_ros" type="static_transform_publisher" name="fastliobody" args="0 0 -0.245 0 -0.131 0 0.991 fastlio_body base" />
  	
 	<node pkg="tf2_ros" type="static_transform_publisher" name="vehicleTransPublisher" args="$(arg sensorOffsetX) $(arg sensorOffsetY) 0 0 0 0 1 vehicle sensor" />
  	<node pkg="tf2_ros" type="static_transform_publisher" name="vehicleRobotPublisher" args="0 0 0 0 0 0 1 $(arg base_frame) vehicle"/>
 	<node pkg="tf2_ros" type="static_transform_publisher" name="livoxToModelPub" args="0 0 0 0 0 0 1 livox_base livox_base_link" />
 	<node pkg="tf2_ros" type="static_transform_publisher" name="sensorToLivox" args="0 0 0 0 0 0 1 sensor livox_base" />

    <!-- ####### Customized Fastlio2 parameters for mid360 ###### -->
	<!-- ####### Isolate parameters w.r.t. the original mid360.yaml -->
	<node pkg="fast_lio" type="fastlio_mapping" name="laserMapping" output="screen" > 
		<rosparam command="load" file="$(find fast_lio)/config/mid360.yaml" />
		<param name="feature_extract_enable" type="bool" value="0"/>
		<param name="point_filter_num" type="int" value="3"/>
		<param name="max_iteration" type="int" value="3" />
		<param name="filter_size_surf" type="double" value="0.5" />
		<param name="filter_size_map" type="double" value="0.5" />
		<param name="cube_side_length" type="double" value="1000" />
		<param name="runtime_pos_log_enable" type="bool" value="0" />
		<param name="common/lid_topic" type="string" value="/livox/lidar" />
		<param name="common/imu_topic" type="string" value="/livox/imu" />"
		<param name="preprocess/blind" value="0.0" />
		<param name="publish/path_en" value="true" />
		<param name="publish/scan_publish_en" value="true" />
		<param name="publish/dense_publish_en" value="true" />
		<param name="publish/scan_bodyframe_pub_en" value="true" />
		<param name="pcd_save/pcd_save_en" value="false" />
	</node>

    <include file="$(find livox_ros_driver2)/launch/msg_MID360.launch">
		<arg name="publish_freq" value="10.0" />
		<arg name="user_config_path" value="$(find rpl-unitree-ros)/config/livox/livox_lidar_config2.json" />
    </include>


  	<node pkg="rpl-unitree-ros" name="twist_stamped_to_twist" type="twist_stamped_to_twist.py" output="screen"/>

	<include file="$(find champ_bringup)/launch/include/velocity_smoother.launch">
		<arg name="raw_cmd_vel_topic" value="/cmd_vel_twist"/>
		<arg name="robot_cmd_vel_topic" value="/no_vel_feedback"/>
	</include>

    <!-- <include file="$(find realsense2_camera)/launch/rs_camera.launch">
		<arg name="align_depth" value="true" />
    </include> -->

	<group if="$(arg useLocalPlanner)">
		<include file="$(find local_planner)/launch/local_planner.launch" >
		<arg name="goalX" value="$(arg vehicleX)"/>
		<arg name="goalY" value="$(arg vehicleY)"/>
		</include>
	</group>

	<include file="$(find terrain_analysis)/launch/terrain_analysis.launch" />

	<include file="$(find terrain_analysis_ext)/launch/terrain_analysis_ext.launch" >
		<arg name="checkTerrainConn" value="$(arg checkTerrainConn)"/>
	</include>

	<node pkg="rpl-unitree-ros" name="go1Controller" type="go1Controller" output="screen">
		<remap from="/cmd_vel" to="/cmd_vel/smooth"/>
	</node>

	<node pkg="rpl-unitree-ros" name="publishRegisteredScan" type="publishRegisteredScan" output="screen">
		<param name="global_frame" value="map" />
		<param name="sensor_frame" value="fastlio_world" />
		<remap from="/velodyne_points" to="/cloud_registered"/>
	</node>

	<node pkg="rpl-unitree-ros" name="odom_pub_from_topic" type="pub_odom_from_topic.py" output="screen">
		<param name="transform_parent" value="map" />
		<param name="transform_child" value="base" />
	</node>

    <!-- RVIZ -->
	<group if="$(arg rviz)">
		<node launch-prefix="nice" pkg="rviz" type="rviz" name="rviz" />
	</group>

</launch>

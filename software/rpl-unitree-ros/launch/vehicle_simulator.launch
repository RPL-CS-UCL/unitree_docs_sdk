<launch>

  <arg name="use_gazebo_odom" default="false"/>
  <arg name="gazebo_controller_config_name" default="go1_control.yaml"/>

  <arg name="sensorOffsetX" default="0"/>
  <arg name="sensorOffsetY" default="0"/>
  <arg name="vehicleHeight" default="0.75"/>
  <arg name="cameraOffsetZ" default="0"/>

  <arg name="vehicleX" default="0"/>
  <arg name="vehicleY" default="0"/>
  <arg name="vehicleZ" default="0"/>
  <arg name="terrainZ" default="0"/>
  <arg name="vehicleYaw" default="0"/>

  <arg name="terrainVoxelSize" default="0.05"/>
  <arg name="groundHeightThre" default="0.1"/>
  <arg name="adjustZ" default="true"/>
  <arg name="terrainRadiusZ" default="1.0"/>
  <arg name="minTerrainPointNumZ" default="5"/>
  <arg name="smoothRateZ" default="0.5"/>
  <arg name="adjustIncl" default="true"/>
  <arg name="terrainRadiusIncl" default="2.0"/>
  <arg name="minTerrainPointNumIncl" default="200"/>
  <arg name="smoothRateIncl" default="0.5"/>
  <arg name="InclFittingThre" default="0.2"/>
  <arg name="maxIncl" default="30.0"/>

  <arg name="paused" default="false"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="false"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>
  <arg name="verbose" default="false"/>
  <arg name="world_name" default="garage"/>

  <node pkg="joint_state_publisher" type="joint_state_publisher" name="joint_state_publisher" unless="$(arg use_gazebo_odom)">
      <param name="use_gui" value="false"/>
  </node>

  <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher" unless="$(arg use_gazebo_odom)">
      <param name="publish_frequency" type="double" value="1000.0"/>
  </node>

  <rosparam file="$(find rpl-unitree-ros)/config/$(arg gazebo_controller_config_name)" command="load" if="$(arg use_gazebo_odom)"/>
  <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false"
      output="screen" ns="/go1" args="joint1_position_controller joint2_position_controller joint3_position_controller joint4_position_controller joint5_position_controller joint6_position_controller joint7_position_controller joint8_position_controller joint9_position_controller joint10_position_controller joint11_position_controller joint12_position_controller joint_state_controller"/>

  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"
    respawn="false" output="screen" if="$(arg use_gazebo_odom)">
    <remap from="/joint_states" to="/go1/joint_states" />
  </node>

  <include file="$(find gazebo_ros)/launch/empty_world.launch" >
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="gui" value="$(arg gui)"/>
    <arg name="headless" value="$(arg headless)"/>
    <arg name="debug" value="$(arg debug)"/>
    <arg name="verbose" value="$(arg verbose)"/>
    <arg name="world_name" value="$(find vehicle_simulator)/world/$(arg world_name).world"/>
  </include>

  <!-- Add Robot URDF -->
  <param name="camera_description" command="$(find xacro)/xacro --inorder '$(find vehicle_simulator)/urdf/rgbd_camera.urdf.xacro'" />
  <node pkg="gazebo_ros" type="spawn_model" name="spawn_camera" args="-urdf -param /camera_description -model rgbd_camera" />

  <param name="lidar_description" command="$(find xacro)/xacro --inorder '$(find vehicle_simulator)/urdf/lidar.urdf.xacro'" />
  <node pkg="gazebo_ros" type="spawn_model" name="spawn_lidar" args="-urdf -param /lidar_description -model lidar" />

  <param name="imu_description" command="$(find xacro)/xacro --inorder '$(find vehicle_simulator)/urdf/imu.urdf.xacro'" />
  <node pkg="gazebo_ros" type="spawn_model" name="spawn_imu" args="-urdf -param /imu_description -model imu"/>

  <node pkg="gazebo_ros" type="spawn_model" name="spawn_robot" args="-urdf -param /robot_description -model robot"/>

  <node pkg="rpl-unitree-ros" type="vehicleSimulator" name="vehicleSimulator" output="screen" required="true">
    <param name="use_gazebo_time" type="bool" value="false" />
    <param name="use_gazebo_odom" type="bool" value="$(arg use_gazebo_odom)" />   
    <param name="sensorOffsetX" value="$(arg sensorOffsetX)" />
    <param name="sensorOffsetY" value="$(arg sensorOffsetY)" />
    <param name="vehicleHeight" value="$(arg vehicleHeight)" />
    <param name="cameraOffsetZ" value="$(arg cameraOffsetZ)" />
    <param name="vehicleX" value="$(arg vehicleX)" />
    <param name="vehicleY" value="$(arg vehicleY)" />
    <param name="vehicleZ" value="$(arg vehicleZ)" />
    <param name="terrainZ" value="$(arg terrainZ)" />
    <param name="vehicleYaw" value="$(arg vehicleYaw)" />
    <param name="terrainVoxelSize" value="$(arg terrainVoxelSize)" />
    <param name="groundHeightThre" value="$(arg groundHeightThre)" />
    <param name="adjustZ" value="$(arg adjustZ)" />
    <param name="terrainRadiusZ" value="$(arg terrainRadiusZ)" />
    <param name="minTerrainPointNumZ" value="$(arg minTerrainPointNumZ)" />
    <param name="smoothRateZ" value="$(arg smoothRateZ)" />
    <param name="adjustIncl" value="$(arg adjustIncl)" />
    <param name="terrainRadiusIncl" value="$(arg terrainRadiusIncl)" />
    <param name="minTerrainPointNumIncl" value="$(arg minTerrainPointNumIncl)" />
    <param name="smoothRateIncl" value="$(arg smoothRateIncl)" />
    <param name="InclFittingThre" value="$(arg InclFittingThre)" />
    <param name="maxIncl" value="$(arg maxIncl)" />
  </node>

  <node pkg="rpl-unitree-ros" name="odom_pub" type="pub_odom.py" output="screen" if="$(arg use_gazebo_odom)"/>

</launch>

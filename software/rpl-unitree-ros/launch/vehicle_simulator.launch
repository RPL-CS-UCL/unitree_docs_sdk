<launch>

  <arg name="use_gazebo_odom" default="false"/>
  <arg name="gazebo_controller_config_name" default="go1_control.yaml"/>
  <arg name="ros_control_file" default="$(find rpl-unitree-ros)/config/ros_control/ros_control.yaml"/>
  <arg name="base_frame" default="base"/>

  <arg name="sensorOffsetX" default="0"/>
  <arg name="sensorOffsetY" default="0"/>
  <arg name="cameraOffsetZ" default="0"/>

  <arg name="vehicleX" default="0"/>
  <arg name="vehicleY" default="0"/>
  <arg name="vehicleZ" default="0"/>
  <arg name="terrainZ" default="0"/>
  <arg name="vehicleYaw" default="0"/>

  <arg name="terrainVoxelSize" default="0.05"/>
  <arg name="groundHeightThre" default="0.1"/>
  <arg name="adjustZ" default="true"/>
  <arg name="terrainRadiusZ" default="1.0"/>
  <arg name="minTerrainPointNumZ" default="5"/>
  <arg name="smoothRateZ" default="0.5"/>
  <arg name="adjustIncl" default="true"/>
  <arg name="terrainRadiusIncl" default="2.0"/>
  <arg name="minTerrainPointNumIncl" default="200"/>
  <arg name="smoothRateIncl" default="0.5"/>
  <arg name="InclFittingThre" default="0.2"/>
  <arg name="maxIncl" default="30.0"/>

  <arg name="paused" default="false"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="false"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>
  <arg name="verbose" default="false"/>
  <arg name="world_name" default="garage"/>

  <arg name="robot_name" default="/go1_gazebo"/>

  <node pkg="joint_state_publisher" type="joint_state_publisher" name="joint_state_publisher" unless="$(arg use_gazebo_odom)">
      <param name="use_gui" value="false"/>
  </node>

  <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher" unless="$(arg use_gazebo_odom)">
      <param name="publish_frequency" type="double" value="1000.0"/>
  </node>

  <rosparam file="$(arg ros_control_file)" command="load"/>
  <node pkg="controller_manager" type="spawner" name="controller_spawner" respawn="false"
          output="screen" ns="$(arg robot_name)" args="joint_states_controller joint_group_position_controller"/>

  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"
    respawn="false" output="screen" if="$(arg use_gazebo_odom)">
    <remap from="/joint_states" to="/go1_gazebo/joint_states" />
  </node>

  <include file="$(find gazebo_ros)/launch/empty_world.launch" >
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="gui" value="$(arg gui)"/>
    <arg name="headless" value="$(arg headless)"/>
    <arg name="debug" value="$(arg debug)"/>
    <arg name="verbose" value="$(arg verbose)"/>
    <arg name="world_name" value="$(find vehicle_simulator)/world/$(arg world_name).world"/>
  </include>

  <!-- Add Robot URDF -->
  <node pkg="gazebo_ros" type="spawn_model" name="spawn_robot" args="-urdf -model $(arg robot_name)  
        -param robot_description -robot_namespace $(arg robot_name) -z 0.01"/>

  <node pkg="rpl-unitree-ros" name="publishRegisteredScan" type="publishRegisteredScan" output="screen" if="$(arg use_gazebo_odom)">
    <param name="global_frame" value="map" />
    <param name="sensor_frame" value="velodyne" />
  </node>


  <node pkg="rpl-unitree-ros" name="odom_pub" type="pub_odom.py" output="screen" if="$(arg use_gazebo_odom)">
    <param name="model_name" value="$(arg robot_name)" />
    <param name="pub_rate" value="100" />
    <param name="out_frame_id" value="state_estimation" />
    <param name="transform_child" value="$(arg base_frame)" />
    <param name="transform_parent" value="map" />
  </node>

</launch>
